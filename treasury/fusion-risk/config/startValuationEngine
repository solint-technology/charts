#!/bin/ksh
#
# Copyright 2007 Reuters Financial Software, All Rights Reserved
#
# Last Update:
#	@(#) $Id$
#
#-----------------------------------------------------------
# startup script for K+ Report Batch 
# being called by the KGR Functional Scheduler
#-----------------------------------------------------------


Usage()
{
    echo "Usage: $0  <request-file.req>";
}

if [[ "$#" = "0" || "$1" = "-h" || "$1" = "-H" ]]; then
    Usage
    exit  
fi

if [ "$#" = "1" ]; then
    REQUEST_FILE=$1
    shift
fi

if [ "$#" = "2" ]; then
    REQUEST_FILE=$1
    MESSAGE=$2
    shift; shift
fi

if [ -z "${JAVA_HOME}" ]; then
    echo "JAVA_HOME not defined"
    exit 1
fi

JAVA=${JAVA_HOME}/bin/java

##############################################################
#-------------------    K+ Configuration   -------------------
#
KPLUSHOME3=/usr/kplushome
KPLUS_USER="kplus"
KPLUS_PASSWORD="Kondor_123"
# put Kondor trace options like -vDB, -tRT etc. here
KPLUS_TRACES=""
# location of kplus.params and other K+ config files
KONDOR_CONFIG_FOLDER=/usr/kplushome/entities/Standalone/config
export KONDOR_CONFIG_FOLDER KPLUSHOME3
#
#-------------------    K+ Configuration   -------------------



###############################################################
#-------------------    KSP Configuration   -------------------
# KSP Users: remove '#' sign at the beginning of following lines related to KSP
# and set path and libraries path according to your site configuration
#
#KSPHOME=/usr/ksphome
#KSP_LICENSE_PATH=$KSPHOME/etc
#PRE_LIB=${PRE_LIB}:${KSPHOME}/analytics/${ARCH}/
#export KSPHOME KSP_LICENSE_PATH
#
# 
#-------------------    KSP Configuration   -------------------



################################################################
#-------------------    GRID Configuration   -------------------
#DSDRIVER_DIR=/usr/kplushome/tools/GridServerSDK/4.2
#export DSDRIVER_DIR
#-------------------    GRID Configuration   -------------------

################################################################
#-------------------    Report Attributes Configuration   ------
#KMRA_DEAL_ATTRIBUTES_EXTRACTOR="Users_Id->Users:Users_ShortName"
#export KMRA_DEAL_ATTRIBUTES_EXTRACTOR
#-------------------    Report Attributes Configuration   ------


###############################################################
#-------------------    KGR Configuration   -------------------
# KGR configuration
if [ "$KREDITNETHOME" != "" ]; then BASE=$KREDITNETHOME
else 
	BASE="/usr/kreditnethome"
	KREDITNETHOME=$BASE; export KREDITNETHOME
fi


BASEDIR=`dirname $0`
ScriptDir=`cd $BASEDIR; pwd`
ETC="$BASE/etc"
ARCH=`$ETC/archtype`; export ARCH
PROGRAM="ReportBatch"
COMMAND="bin/$PROGRAM"

export LD_LIBRARY_PATH=$KPLUSHOME3/lib/ext/${ARCH}:$KPLUSHOME3/lib/int/${ARCH}:$KPLUSHOME3/common/machine/${ARCH}:$LD_LIBRARY_PATH

#----  Path to the file generated by the functional scheduler
KGR_MARKET_RISK_PATH=/home/fusionrisk/CMR/data/interface/fs; export KGR_MARKET_RISK_PATH

#----  Path to the file generated by the KRMS (scenario files)
KGR_RATE_SCENARIO_PATH=/home/fusionrisk/CMR/data/interface/scenarios; export KGR_RATE_SCENARIO_PATH

#----  Force the master engine to generate a result file. This is used in standalone mode (non-grid) configuration
KMRA_FORCE_EXPORT=1; export KMRA_FORCE_EXPORT

#----  To run the K+ ReportBatch in GRID mode, set the variable KMRA_GRID_COMPUTING=1, in that case, comment KMRA_FORCE_EXPORT variable
KMRA_GRID_COMPUTING=0

#----  Default mapping for SensitivityType: DELTA, IR_CONVEXITY, IR_CAPFLOOR_VEGA, IR_SWAPTION_VEGA, FX_VEGA, EQ_VEGA
#KMRA_SENSI_MAPPING=1; export KMRA_SENSI_MAPPING

#----  KMRA will generate map Folders as an AttributeGroup (Portfolio)
#KMRA_USE_FOLDERS=1; export KMRA_USE_FOLDERS

#----  KMRA produced NPV files with INSERT mode, else UPDATE mode will be used.
#KMRA_FORCE_INSERT=1; export KMRA_FORCE_INSERT

#----  KMRA will generate a lot of debugging information about the internal activity
#KMRA_VERBOSE=1; export KMRA_VERBOSE

#----  KMRA will generate a lot of debugging information about the internal activity
#KMRA_PEDANTIC=1; export KMRA_PEDANTIC

#----  KMRA will generate a lot of debugging information about the internal activity : stack trace for each warning/error
#KMRA_INVESTIGATION=1; export KMRA_INVESTIGATION

#----  KMRA won't display errors
#KMRA_IGNORE_ERROR=1; export KMRA_IGNORE_ERROR

#----  KMRA won't display warnings
#KMRA_IGNORE_WARNING=1; export KMRA_IGNORE_WARNING

#----  List of deal attributes to skip
#KMRA_IGNORE_ATTRIBUTES="Currency,Branches"; export KMRA_IGNORE_ATTRIBUTES


PRE_LIB=${PRE_LIB}:${KREDITNETHOME}/kles/kmra/lib/${ARCH}:${DSDRIVER_DIR}/${ARCH}/cppdriver/lib
. ${ETC}/kgrlibpath.sh

[ -x "$ScriptDir/startup.before" ] && . $ScriptDir/startup.before


cd $KPLUSHOME3
DATESTAMP=`date +"%Y_%m_%d"`
TIMESTAMP=`date +"%Y_%m_%d-%H_%M_%S"`

#-------------------------------------------------- 
LOGDIR_VE=/home/fusionrisk/CMR/log/ve
mkdir -p $LOGDIR_VE
base_req_fn=`basename $REQUEST_FILE`
log_suffix=`echo $base_req_fn | sed 's/\.req//'`
ts=`date +"%d%m%Y_%H%M%S"`
LOGFILE=${LOGDIR_VE}/ValuationEngine-${ts}-${log_suffix}.log

# Add entry on General log file
LOGFILE_GEN=/home/fusionrisk/CMR/log/ValuationEngine_${DATESTAMP}.log
[ ! -f $LOGFILE_GEN ] && touch $LOGFILE_GEN
scriptname=`basename $0`
printf "[`date +'%d-%m-%Y %H:%M:%S'`] $scriptname %-60s - LOG: ${LOGFILE}\n" "${base_req_fn}" >> $LOGFILE_GEN
#-------------------------------------------------- 

KondorVersion=`${COMMAND} -Hpush | grep "Version"`

# ReportBatch standard output redirected into a file
[ ! -f $LOGFILE ] && touch $LOGFILE
cat <<- EOC >> $LOGFILE
########################################
########################################
#BEGIN_$TIMESTAMP
#G Kondor Release: $KondorVersion
#G COMMAND       : $COMMAND
#G SETTING       :
`grep '^K[A-Z]R' $ScriptDir/$0`
#---------------------------------------
EOC

STARTAT=$SECONDS
#use entrypoint KPADMINFILE provided on K+3.4.1 to fill stdin
# default path of file
[[ -z $PWDFILE ]] && PWDFILE="$KONDOR_CONFIG_FOLDER/.kpadminfile.passwords"
[ ! -f $PWDFILE ] && PWDFILE="$KONDOR_CONFIG_FOLDER/.root.passwords"
# override with the env var if provided
[[ ! -z $KPADMINFILE ]] && PWDFILE=$KPADMINFILE
echo "KPADMINFILE=$KPADMINFILE" >> $LOGFILE
echo "PWDFILE=$PWDFILE" >> $LOGFILE

[ ! -f $PWDFILE ] && echo "please provide path of passwords file in environment shell variable KPADMINFILE" >> $LOGFILE
echo="using '$PWDFILE' as passwords file" >> $LOGFILE

GRID_COMPUTING_FLAG=""
if [[ $KMRA_GRID_COMPUTING -eq 1 ]]; then
    GRID_COMPUTING_FLAG="-grid_computing"
fi

${JAVA} -jar ${KREDITNETHOME}/gui/libs/internal/kgr-valuationengine-runner.jar -bin "${COMMAND}" \
                                                                               -message "${MESSAGE}" \
                                                                               -user "${KPLUS_USER}" \
                                                                               -password "${KPLUS_PASSWORD}" \
                                                                               -config "${KONDOR_CONFIG_FOLDER}" \
                                                                               -traces "${KPLUS_TRACES}" \
                                                                               -file "${REQUEST_FILE}" \
                                                                               ${GRID_COMPUTING_FLAG} \
                                                                               -other "$*" \
                                                                               -admin_passwords "${PWDFILE}" 2>&1 | tee -a $LOGFILE

echo "#---------------------------------------" >> $LOGFILE
echo "#END_$TIMESTAMP / elapsed time: $(($SECONDS - $STARTAT)) seconds" >> $LOGFILE
[ -x "$ScriptDir/startup.after" ] && . $ScriptDir/startup.after

echo ""

